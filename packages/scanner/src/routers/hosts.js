/*
  Eventually this kind of routers should be 
  autogenerated based on some type of objects
  modeling system. 
*/

import { Router } from "express"
import { responseError, response, DefaultData } from "../response.js";
import { getDb } from "../db/index.js";
import { getIps } from "../lib/dns.js";

export const HostsRouter = Router()

// /api/v1/hosts
HostsRouter.get("/", async (req, res) => {
  const db = await getDb("host")
  const entries = await db.getAll()
  response(res, { entries }, "Stored hosts")
})

HostsRouter.post("/", async (req, res) => {
  const body = req.body
  if (!body || !body.hostname) {
    return responseError(res, 400, DefaultData, "Bad request")
  }

  const ips = await getIps(body.hostname)
  const db = await getDb("host")
  const insertion = await db.put(body.hostname, { ips, ...body })
  response(res, { entry: insertion }, "Stored hosts")
})

HostsRouter.delete("/:hostname", async (req, res) => {
  const hostname = req.params.hostname
  const db = await getDb("host")
  const insertion = await db.delete(hostname)
  response(res, { entry: insertion }, "Stored hosts")
})



